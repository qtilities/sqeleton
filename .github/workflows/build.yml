name: Build

on:
  push:
    branches:
    - '*'
    tags:
    - '[0-9]*'
  pull_request:
    branches:
    - '*'

defaults:
  run:
    shell: bash

env:
  build_type: Release

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
        - { name: "GCC", cc: gcc, cxx: g++ }
        - { name: "clang", cc: clang, cxx: clang++ }
    env:
      cc:           ${{ matrix.config.cc }}
      cxx:          ${{ matrix.config.cxx }}
      install_name: qruler-${{ github.ref_name }}-linux
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Update Packages
      run: sudo apt-get update

    - name: Install Dependencies
      run: |
        packages=(
          qtbase5-dev
          qttools5-dev
        )
        sudo apt-get install ${packages[@]}

    - name: Configure
      run: |
        options=(
          -D CMAKE_INSTALL_PREFIX="/usr"
          -D CMAKE_build_type="$build_type"
          -B ${{ runner.workspace }}/build
        )
        cmake ${options[@]}

    - name: Build
      run: cmake --build ${{ runner.workspace }}/build --config "$build_type"

    - name: Create package
      if:   ${{ github.ref_type == 'tag' && matrix.config.cc == 'gcc' }}
      working-directory: ${{ runner.workspace }}/build
      run: |
        DESTDIR="$(pwd)/$install_name" \
          cmake --build . --config "$build_type" --target install
        tar czvf "$install_name".tar.gz "$install_name"

    - name: Upload Artifacts
      if:   ${{ github.ref_type == 'tag' && matrix.config.cc == 'gcc' }}
      uses: actions/upload-artifact@v3
      with:
        name: Linux Artifacts
        path: ${{ runner.workspace }}/build/${{ env.install_name }}.tar.gz

  deploy:
    name: Deployment
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    needs:
    - linux
    steps:
    - name: Linux download
      uses: actions/download-artifact@v3
      with:
        name: Linux Artifacts

    - name: Display File Information
      run:  ls -lR

    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name:   ${{ github.ref_name }}
        name:       Release ${{ github.ref_name }}
        draft:      false
        prerelease: false
        files: |
          qruler-${{ github.ref_name }}-*
          qruler-${{ github.ref_name }}.*
